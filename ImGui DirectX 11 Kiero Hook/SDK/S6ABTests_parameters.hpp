#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S6ABTests

#include "Basic.hpp"

#include "S6ABTests_structs.hpp"


namespace SDK::Params
{

// Function S6ABTests.S6ABTestClientServerSyncer.RpcServer_SendToServer
// 0x0010 (0x0010 - 0x0000)
struct S6ABTestClientServerSyncer_RpcServer_SendToServer final
{
public:
	TArray<struct FABTestAssignment>              TestAssignments;                                   // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6ABTestClientServerSyncer_RpcServer_SendToServer) == 0x000008, "Wrong alignment on S6ABTestClientServerSyncer_RpcServer_SendToServer");
static_assert(sizeof(S6ABTestClientServerSyncer_RpcServer_SendToServer) == 0x000010, "Wrong size on S6ABTestClientServerSyncer_RpcServer_SendToServer");
static_assert(offsetof(S6ABTestClientServerSyncer_RpcServer_SendToServer, TestAssignments) == 0x000000, "Member 'S6ABTestClientServerSyncer_RpcServer_SendToServer::TestAssignments' has a wrong offset!");

// Function S6ABTests.S6ABTestManager.HandleAbTestSettingsChanged
// 0x0008 (0x0008 - 0x0000)
struct S6ABTestManager_HandleAbTestSettingsChanged final
{
public:
	const class US6ABTestSettings*                Settings;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6ABTestManager_HandleAbTestSettingsChanged) == 0x000008, "Wrong alignment on S6ABTestManager_HandleAbTestSettingsChanged");
static_assert(sizeof(S6ABTestManager_HandleAbTestSettingsChanged) == 0x000008, "Wrong size on S6ABTestManager_HandleAbTestSettingsChanged");
static_assert(offsetof(S6ABTestManager_HandleAbTestSettingsChanged, Settings) == 0x000000, "Member 'S6ABTestManager_HandleAbTestSettingsChanged::Settings' has a wrong offset!");

// Function S6ABTests.S6ABTestManager.HandlePlayerControllerDestroyed
// 0x0008 (0x0008 - 0x0000)
struct S6ABTestManager_HandlePlayerControllerDestroyed final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6ABTestManager_HandlePlayerControllerDestroyed) == 0x000008, "Wrong alignment on S6ABTestManager_HandlePlayerControllerDestroyed");
static_assert(sizeof(S6ABTestManager_HandlePlayerControllerDestroyed) == 0x000008, "Wrong size on S6ABTestManager_HandlePlayerControllerDestroyed");
static_assert(offsetof(S6ABTestManager_HandlePlayerControllerDestroyed, Actor) == 0x000000, "Member 'S6ABTestManager_HandlePlayerControllerDestroyed::Actor' has a wrong offset!");

// Function S6ABTests.S6ABTestManager.Client_GetValueOfAbTest
// 0x0010 (0x0010 - 0x0000)
struct S6ABTestManager_Client_GetValueOfAbTest final
{
public:
	const class US6ABTest*                        AbTest;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6ABTestManager_Client_GetValueOfAbTest) == 0x000008, "Wrong alignment on S6ABTestManager_Client_GetValueOfAbTest");
static_assert(sizeof(S6ABTestManager_Client_GetValueOfAbTest) == 0x000010, "Wrong size on S6ABTestManager_Client_GetValueOfAbTest");
static_assert(offsetof(S6ABTestManager_Client_GetValueOfAbTest, AbTest) == 0x000000, "Member 'S6ABTestManager_Client_GetValueOfAbTest::AbTest' has a wrong offset!");
static_assert(offsetof(S6ABTestManager_Client_GetValueOfAbTest, ReturnValue) == 0x000008, "Member 'S6ABTestManager_Client_GetValueOfAbTest::ReturnValue' has a wrong offset!");

// Function S6ABTests.S6ABTestManager.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct S6ABTestManager_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6ABTestManager_IsEnabled) == 0x000001, "Wrong alignment on S6ABTestManager_IsEnabled");
static_assert(sizeof(S6ABTestManager_IsEnabled) == 0x000001, "Wrong size on S6ABTestManager_IsEnabled");
static_assert(offsetof(S6ABTestManager_IsEnabled, ReturnValue) == 0x000000, "Member 'S6ABTestManager_IsEnabled::ReturnValue' has a wrong offset!");

// Function S6ABTests.S6ABTestManager.Server_GetValueOfAbTest
// 0x0018 (0x0018 - 0x0000)
struct S6ABTestManager_Server_GetValueOfAbTest final
{
public:
	const class US6ABTest*                        AbTest;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class APlayerController*                PC;                                                // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(S6ABTestManager_Server_GetValueOfAbTest) == 0x000008, "Wrong alignment on S6ABTestManager_Server_GetValueOfAbTest");
static_assert(sizeof(S6ABTestManager_Server_GetValueOfAbTest) == 0x000018, "Wrong size on S6ABTestManager_Server_GetValueOfAbTest");
static_assert(offsetof(S6ABTestManager_Server_GetValueOfAbTest, AbTest) == 0x000000, "Member 'S6ABTestManager_Server_GetValueOfAbTest::AbTest' has a wrong offset!");
static_assert(offsetof(S6ABTestManager_Server_GetValueOfAbTest, PC) == 0x000008, "Member 'S6ABTestManager_Server_GetValueOfAbTest::PC' has a wrong offset!");
static_assert(offsetof(S6ABTestManager_Server_GetValueOfAbTest, ReturnValue) == 0x000010, "Member 'S6ABTestManager_Server_GetValueOfAbTest::ReturnValue' has a wrong offset!");

}

